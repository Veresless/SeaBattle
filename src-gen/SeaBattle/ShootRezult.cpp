/*
 * Autogenerated by ThriftMeGenerator (v2.13.4.0)
 * 
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING!
 * 
 * Copyright 2020 Daimler AG
 * All Rights Reserved.
 * NOTICE:  All added/modified information contained herein is and remains the proprietary of Daimler AG.
 * The intellectual and technical concepts contained herein are proprietary to Daimler AG and may be covered by German and Foreign Patents, patent applications, and are protected by trade secret or copyright law.
 */

#include "ShootRezult.h"

#include <thriftme/utility/TEnumIterator.h>

namespace SeaBattle
{
	int32_t _kShootRezultValues[] =
	{
		ShootRezult::Miss,
		ShootRezult::Hit,
		ShootRezult::Kill
	};

	const char* _kShootRezultNames[] =
	{
		"Miss",
		"Hit",
		"Kill"
	};

	const std::map<int32_t, const char*> _ShootRezult_VALUES_TO_NAMES(::thrift::utility::TEnumIterator(3, _kShootRezultValues, _kShootRezultNames), ::thrift::utility::TEnumIterator(-1, NULL, NULL));
	const char * ShootRezult::GetName(int32_t eKey, const char *szFallBack)
	{
		const  std::map<int32_t, const char*>::const_iterator it(_ShootRezult_VALUES_TO_NAMES.find(eKey));
		return (it == _ShootRezult_VALUES_TO_NAMES.end()) ? szFallBack : it->second;
	}
}
